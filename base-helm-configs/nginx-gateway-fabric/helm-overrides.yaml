nginxGateway:
  ## The kind of the NGINX Gateway Fabric installation - currently, only deployment is supported.
  kind: deployment
  ## gatewayClassName is the name of the GatewayClass that will be created as part of this release. Every NGINX Gateway
  ## Fabric must have a unique corresponding GatewayClass resource. NGINX Gateway Fabric only processes resources that
  ## belong to its class - i.e. have the "gatewayClassName" field resource equal to the class.
  gatewayClassName: nginx
  ## The name of the Gateway controller. The controller name must be of the form: DOMAIN/PATH. The controller's domain
  ## is gateway.nginx.org.
  gatewayControllerName: gateway.nginx.org/nginx-gateway-controller
  ## The dynamic configuration for the control plane that is contained in the NginxGateway resource.
  config:
    logging:
      ## Log level. Supported values "info", "debug", "error".
      level: info
  ## The number of replicas of the NGINX Gateway Fabric Deployment.
  replicaCount: 1
  ## The configuration for leader election.
  leaderElection:
    ## Enable leader election. Leader election is used to avoid multiple replicas of the NGINX Gateway Fabric
    ## reporting the status of the Gateway API resources. If not enabled, all replicas of NGINX Gateway Fabric
    ## will update the statuses of the Gateway API resources.
    enable: true
    ## The name of the leader election lock. A Lease object with this name will be created in the same Namespace as
    ## the controller. Autogenerated if not set or set to "".
    lockName: ""

  ## Defines the settings for the control plane readiness probe. This probe returns Ready when the controller
  ## has started and configured NGINX to serve traffic.
  readinessProbe:
    ## Enable the /readyz endpoint on the control plane.
    enable: true
    ## Port in which the readiness endpoint is exposed.
    port: 8081
    ## The number of seconds after the Pod has started before the readiness probes are initiated.
    initialDelaySeconds: 3

  image:
    ## The NGINX Gateway Fabric image to use
    repository: ghcr.io/nginxinc/nginx-gateway-fabric
    tag: 1.4.0
    pullPolicy: IfNotPresent

  securityContext:
    ## Some environments may need this set to true in order for the control plane to successfully reload NGINX.
    allowPrivilegeEscalation: false

  ## The lifecycle of the nginx-gateway container.
  lifecycle: {}

  ## extraVolumeMounts are the additional volume mounts for the nginx-gateway container.
  extraVolumeMounts: []

nginx:
  ## The NGINX image to use
  image:
    repository: ghcr.io/nginxinc/nginx-gateway-fabric/nginx
    tag: 1.4.0
    pullPolicy: IfNotPresent

  ## The lifecycle of the nginx container.
  lifecycle: {}

  ## extraVolumeMounts are the additional volume mounts for the nginx container.
  extraVolumeMounts: []

## The termination grace period of the NGINX Gateway Fabric pod.
terminationGracePeriodSeconds: 30

## Tolerations for the NGINX Gateway Fabric pod.
tolerations: []

## The affinity of the NGINX Gateway Fabric pod.
affinity: {}

serviceAccount:
  annotations: {}
  ## The name of the service account of the NGINX Gateway Fabric pods. Used for RBAC.
  ## Autogenerated if not set or set to "".
  # name: nginx-gateway

service:
  ## Creates a service to expose the NGINX Gateway Fabric pods.
  create: true
  ## The type of service to create for the NGINX Gateway Fabric.
  type: LoadBalancer
  ## The externalTrafficPolicy of the service. The value Local preserves the client source IP.
  externalTrafficPolicy: Cluster
  ## The annotations of the NGINX Gateway Fabric service.
  annotations:
    "metallb.universe.tf/address-pool": "gateway-api-external"
    "metallb.universe.tf/allow-shared-ip": "openstack-external-svc"

  ## A list of ports to expose through the NGINX Gateway Fabric service. Update it to match the listener ports from
  ## your Gateway resource. Follows the conventional Kubernetes yaml syntax for service ports.
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https

metrics:
  ## Enable exposing metrics in the Prometheus format.
  enable: true
  ## Set the port where the Prometheus metrics are exposed. Format: [1024 - 65535]
  port: 9113
  ## Enable serving metrics via https. By default metrics are served via http.
  ## Please note that this endpoint will be secured with a self-signed certificate.
  secure: false

## extraVolumes for the NGINX Gateway Fabric pod. Use in conjunction with
## nginxGateway.extraVolumeMounts and nginx.extraVolumeMounts to mount additional volumes to the containers.
extraVolumes: []

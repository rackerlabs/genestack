---
apiVersion: rabbitmq.com/v1beta1
kind: User
metadata:
  name: ironic
  namespace: openstack
  annotations:
    helm.sh/resource-policy: keep
spec:
  tags:
  - management # available tags are 'management', 'policymaker', 'monitoring' and 'administrator'
  - policymaker
  rabbitmqClusterReference:
    name: rabbitmq # rabbitmqCluster must exist in the same namespace as this resource
    namespace: openstack
  importCredentialsSecret:
    name: ironic-rabbitmq-password
---
apiVersion: rabbitmq.com/v1beta1
kind: Vhost
metadata:
  name: ironic-vhost
  namespace: openstack
  annotations:
    helm.sh/resource-policy: keep
spec:
  name: "ironic" # vhost name; required and cannot be updated
  defaultQueueType: quorum # default queue type for this vhost; require RabbitMQ version 3.11.12 or above
  rabbitmqClusterReference:
    name: rabbitmq # rabbitmqCluster must exist in the same namespace as this resource
    namespace: openstack
# status:
#   conditions:
#   - lastTransitionTime: ""
#     status: "True" # true, false, or unknown
#     type: Ready
#     Reason: "SuccessfulCreateOrUpdate" # status false result in reason FailedCreateOrUpdate
#     Message: "" # set when status is false
---
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  name: ironic-queue
  namespace: openstack
  annotations:
    helm.sh/resource-policy: keep
spec:
  name: ironic-qq # name of the queue
  vhost: "ironic" # default to '/' if not provided
  type: quorum # without providing a queue type, rabbitmq creates a classic queue
  autoDelete: false
  durable: true # seting 'durable' to false means this queue won't survive a server restart
  rabbitmqClusterReference:
    name: rabbitmq # rabbitmqCluster must exist in the same namespace as this resource
    namespace: openstack
---
apiVersion: rabbitmq.com/v1beta1
kind: Permission
metadata:
  name: ironic-permission
  namespace: openstack
  annotations:
    helm.sh/resource-policy: keep
spec:
  vhost: "ironic" # name of a vhost
  userReference:
    name: "ironic" # name of a user.rabbitmq.com in the same namespace; must specify either spec.userReference or spec.user
  permissions:
    write: ".*"
    configure: ".*"
    read: ".*"
  rabbitmqClusterReference:
    name: rabbitmq # rabbitmqCluster must exist in the same namespace as this resource
    namespace: openstack
# status:
#   conditions:
#   - lastTransitionTime: ""
#     status: "True" # true, false, or unknown
#     type: Ready
#     Reason: "SuccessfulCreateOrUpdate" # status false result in reason FailedCreateOrUpdate
#     Message: "" # set when status is false
